Compilation from jl code to assembly:

input.jl -> output.asm -> output.o -> output 

(output.asm and output.o gets deleted)

The first part from input.jl to output.asm is made by JACLANG interpreter. The second part is made by nasm, and the third part is made by linker. Nasm is a dependency.

input.jl -> tokens -> ast -> output.asm

This whole process is done in main function in main.cpp.

The first part is done by lexer (lexer.cpp), the second part is done by parser (parser.cpp), the third part is made by generator (generator.cpp).

All those files are in src (source files).
