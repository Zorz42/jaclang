Compilation from jaclang code to assembly:

input.jl -> tokens -> ast -> assembly tokens -> out.s

This whole process is done in main function in main.cpp in function compileJaclang().

The first part is done by lexer (Lexer/core.cpp), the second part is done by parser (Parser/core.cpp), the third part is made by generator (Generator/core.cpp), the forth part is made by assembly generator (Assembly/core.cpp).

Some optimizations to ast is done by optimizer (Optimizer/core.cpp)

All those files are in Sources/
